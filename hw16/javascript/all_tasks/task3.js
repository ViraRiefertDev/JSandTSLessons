"use strict";
// –ó–∞–¥–∞—á–∞ 3. –û–±‚Äô—î–∫—Ç ‚Äú–§—ñ—Ä–º–∞‚Äù (–≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —á–ª–µ–Ω–∏-–∫–ª–∞—Å–∏)
// –ø–æ–ª—è
//  –Ω–∞–∑–≤–∞ —Ñ—ñ—Ä–º–∏;
//  –¥–∞—Ç–∞ –∑–∞—Å–Ω—É–≤–∞–Ω–Ω—è (—Ä—ñ–∫, –º—ñ—Å—è—Ü—å);
//  –ø–æ—Å–ª—É–≥–∏ (–Ω–∞–∑–≤–∞ –ø–æ—Å–ª—É–≥–∏, –≤–∞—Ä—Ç—ñ—Å—Ç—å, —Ç–µ—Ä–º—ñ–Ω –≤–∏–∫–æ–Ω–∞–Ω–Ω—è);
//  –∞–¥—Ä–µ—Å–∏ —Ñ—ñ–ª—ñ–∞–ª—ñ–≤ (–∫—Ä–∞—ó–Ω–∞, –º—ñ—Å—Ç–æ, –≤—É–ª–∏—Ü—è, –Ω–æ–º–µ—Ä –±—É–¥–∏–Ω–∫—É);
// –º–µ—Ç–æ–¥–∏
//  –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ä–æ–∫—ñ–≤ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è —Ñ—ñ—Ä–º–∏;
//  –≤–∏–≤–µ–¥–µ–Ω–Ω—è –≤—Å—ñ—Ö —Ñ—ñ–ª—ñ–∞–ª—ñ–≤ —Ñ—ñ—Ä–º–∏ —É –≤–∫–∞–∑–∞–Ω–æ–º—É –º—ñ—Å—Ç—ñ;
//  –≤–∏–≤–µ–¥–µ–Ω–Ω—è –Ω–∞ –µ–∫—Ä–∞–Ω –ø–æ—Å–ª—É–≥, —â–æ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω—ñ –∑–∞ –≤–∫–∞–∑–∞–Ω—É —Å—É–º—É –≥—Ä–æ—à–µ–π —Ç–∞ –≤–∫–∞–∑–∞–Ω–∏–π —Ç–µ—Ä–º—ñ–Ω —á–∞—Å—É;
if (confirm('–ü–æ—á–∞—Ç–∏ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è?')) {
    let DurationUnit;
    (function (DurationUnit) {
        DurationUnit[DurationUnit["Hours"] = 1] = "Hours";
        DurationUnit[DurationUnit["Days"] = 24] = "Days";
        DurationUnit[DurationUnit["Weeks"] = 168] = "Weeks";
    })(DurationUnit || (DurationUnit = {}));
    class Firm {
        constructor(firmName, foundationDate, initServices, initBranches) {
            this._name = '';
            this._foundationDate = new Date();
            this._services = [];
            this._branches = [];
            this.FirmName = firmName;
            this.FoundationDate = foundationDate;
            this.Services = initServices;
            this.Branches = initBranches;
        }
        set FirmName(firmName) {
            if (firmName === '') {
                throw new Error("–û–±'—î–∫—Ç –§—ñ—Ä–º–∞ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω –±–æ –Ω–∞–∑–≤–∞ —Ñ—ñ—Ä–º–∏ –ø—É—Å—Ç–∏–π —Ä—è–¥–æ–∫");
            }
            this._name = firmName;
        }
        get FirmName() {
            return this._name;
        }
        set FoundationDate(foundationDate) {
            if (foundationDate > new Date()) {
                throw new Error("–û–±'—î–∫—Ç –§—ñ—Ä–º–∞ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω –±–æ –¥–∞—Ç–∞ –∑–∞—Å–Ω—É–≤–∞–Ω–Ω—è –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø—ñ–∑–Ω—ñ—à–µ –ø–æ—Ç–æ—á–Ω–æ—ó –¥–∞—Ç–∏!");
            }
            this._foundationDate = foundationDate;
        }
        set Services(initServices) {
            if (this.isValuesInObjectsArrayValid(initServices)) {
                this._services = initServices;
            }
            else {
                throw new Error("–û–±'—î–∫—Ç –§—ñ—Ä–º–∞ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω. –ù–µ–≤–∞–ª—ñ–¥–Ω—ñ –¥–∞–Ω—ñ —É —Å–ø–∏—Å–∫—É –ø–æ—Å–ª—É–≥!");
            }
        }
        set Branches(initBranches) {
            if (this.isValuesInObjectsArrayValid(initBranches)) {
                this._branches = initBranches;
            }
            else {
                throw new Error("–û–±'—î–∫—Ç –§—ñ—Ä–º–∞ –Ω–µ —Å—Ç–≤–æ—Ä–µ–Ω. –ù–µ–≤–∞–ª—ñ–¥–Ω—ñ –¥–∞–Ω—ñ —É —Å–ø–∏—Å–∫—É —Ñ—ñ–ª—ñ–π!");
            }
        }
        isValuesInObjectsArrayValid(arrayOfObjects) {
            for (const obj of arrayOfObjects) {
                const anyObj = obj;
                for (const key in anyObj) {
                    const value = anyObj[key];
                    if (typeof value === 'string' && value.trim() === '')
                        return false;
                    if (typeof value === 'number' && value <= 0)
                        return false;
                }
            }
            return true;
        }
        convertToHours(value, unit) {
            return value * unit;
        }
        getYearsOfFirmExistence() {
            const now = new Date();
            return now.getFullYear() - this._foundationDate.getFullYear();
        }
        showBranchesByCity(cityName) {
            const branchesInCity = this._branches.filter(b => b.city.toLowerCase() === cityName.toLowerCase());
            document.write(`
          <h3>–§—ñ–ª—ñ—ó —É –º—ñ—Å—Ç—ñ ${cityName}</h3>`);
            if (branchesInCity.length === 0) {
                document.write(`–ù–µ–º–∞—î —Ñ—ñ–ª—ñ–π —É —Ü—å–æ–º—É –º—ñ—Å—Ç—ñ.`);
                return;
            }
            for (const branch of branchesInCity) {
                document.write(`${branch.country}, ${branch.city}, ${branch.street} ${branch.buildingNumber}<br/>`);
            }
        }
        showServicesByPriceAndDuration(maxPrice, maxDuration, unit) {
            const suitableServices = this._services.filter(service => {
                const serviceDurationInHours = this.convertToHours(service.duration, service.durationUnit);
                const maxDurationInHours = this.convertToHours(maxDuration, unit);
                return service.price <= maxPrice && serviceDurationInHours <= maxDurationInHours;
            });
            document.write(`<h3>–ü–æ—Å–ª—É–≥–∏ –≤ –º–µ–∂–∞—Ö ${maxPrice} –≥—Ä–Ω —ñ ${maxDuration} ${DurationUnit[unit].toLowerCase()}</h3>`);
            if (suitableServices.length === 0) {
                document.write(`–ù–µ–º–∞—î –ø–æ—Å–ª—É–≥, —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é—Ç—å —É–º–æ–≤–∞–º.<br/>`);
                return;
            }
            for (const s of suitableServices) {
                document.write(`${s.title} ‚Äî ${s.price} –≥—Ä–Ω, ${s.duration} ${DurationUnit[s.durationUnit].toLowerCase()}<br/>`);
            }
        }
    }
    const services = [
        { title: "Web Development", price: 1200, duration: 2, durationUnit: DurationUnit.Weeks },
        { title: "SEO Optimization", price: 600, duration: 5, durationUnit: DurationUnit.Days },
        { title: "UI/UX Design", price: 900, duration: 7, durationUnit: DurationUnit.Days },
        { title: "Technical Support", price: 300, duration: 48, durationUnit: DurationUnit.Hours },
        { title: "Mobile App Development", price: 2000, duration: 3, durationUnit: DurationUnit.Weeks },
        { title: "Copywriting", price: 250, duration: 2, durationUnit: DurationUnit.Days },
        { title: "Social Media Marketing", price: 800, duration: 10, durationUnit: DurationUnit.Days },
        { title: "Cloud Infrastructure Setup", price: 1500, duration: 1, durationUnit: DurationUnit.Weeks },
        { title: "IT Consulting", price: 400, duration: 6, durationUnit: DurationUnit.Hours },
        { title: "QA & Testing", price: 700, duration: 4, durationUnit: DurationUnit.Days }
    ];
    const branches = [
        { country: "–£–∫—Ä–∞—ó–Ω–∞", city: "–ö–∏—ó–≤", street: "–•—Ä–µ—â–∞—Ç–∏–∫", buildingNumber: 10 },
        { country: "–£–∫—Ä–∞—ó–Ω–∞", city: "–õ—å–≤—ñ–≤", street: "–ü—Ä–æ—Å–ø–µ–∫—Ç –°–≤–æ–±–æ–¥–∏", buildingNumber: 22 },
        { country: "–£–∫—Ä–∞—ó–Ω–∞", city: "–û–¥–µ—Å–∞", street: "–î–µ—Ä–∏–±–∞—Å—ñ–≤—Å—å–∫–∞", buildingNumber: 7 },
        { country: "–ù—ñ–º–µ—á—á–∏–Ω–∞", city: "–ë–µ—Ä–ª—ñ–Ω", street: "Friedrichstra√üe", buildingNumber: 20 },
        { country: "–ù—ñ–º–µ—á—á–∏–Ω–∞", city: "–ú—é–Ω—Ö–µ–Ω", street: "Leopoldstra√üe", buildingNumber: 55 },
        { country: "–ù—ñ–º–µ—á—á–∏–Ω–∞", city: "–ì–∞–º–±—É—Ä–≥", street: "M√∂nckebergstra√üe", buildingNumber: 14 },
        { country: "–°–®–ê", city: "–ù—å—é-–ô–æ—Ä–∫", street: "Broadway", buildingNumber: 1500 },
        { country: "–°–®–ê", city: "–°–∞–Ω-–§—Ä–∞–Ω—Ü–∏—Å–∫–æ", street: "Market Street", buildingNumber: 280 }
    ];
    try {
        console.log("üîπ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—ñ—Ä–º–∏ –∑ –≤–∞–ª—ñ–¥–Ω–∏–º–∏ –¥–∞–Ω–∏–º–∏...");
        const firm1 = new Firm("TechNova", new Date("2018-03-15"), services, branches);
        console.log("–§—ñ—Ä–º–∞ —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–∞!");
        console.log("–ù–∞–∑–≤–∞:", firm1["FirmName"]);
        console.log("–†–æ–∫—ñ–≤ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è:", firm1.getYearsOfFirmExistence());
        firm1.showBranchesByCity("–ö–∏—ó–≤");
        firm1.showServicesByPriceAndDuration(800, 7, DurationUnit.Days);
    }
    catch (err) {
        console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ —Ñ—ñ—Ä–º–∏:", err.message);
    }
    console.log("\n---------------------------\n");
    try {
        console.log("üîπ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—ñ—Ä–º–∏ –∑ –ø–æ—Ä–æ–∂–Ω—å–æ—é –Ω–∞–∑–≤–æ—é –ø–æ—Å–ª—É–≥–∏ (–æ—á—ñ–∫—É—î—Ç—å—Å—è –ø–æ–º–∏–ª–∫–∞)...");
        const firm2 = new Firm("BadFirm", new Date("2020-05-01"), [
            { title: "", price: 100, duration: 5, durationUnit: DurationUnit.Days }, //!–ø–æ–º–∏–ª–∫–∞ —Ç—É—Ç
        ], branches);
        console.log("–¶–µ–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –≤–∏–∫–æ–Ω–∞—Ç–∏—Å—è ‚Äî –ø–æ–º–∏–ª–∫–∞ –º–∞–ª–∞ –±—É—Ç–∏ —Ä–∞–Ω—ñ—à–µ");
    }
    catch (err) {
        console.error("–û—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞:", err.message);
    }
    console.log("\n---------------------------\n");
    try {
        console.log("–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ñ—ñ—Ä–º–∏ –∑ –¥–∞—Ç–æ—é —É –º–∞–π–±—É—Ç–Ω—å–æ–º—É (–æ—á—ñ–∫—É—î—Ç—å—Å—è –ø–æ–º–∏–ª–∫–∞)...");
        const firm3 = new Firm("FutureCorp", new Date("2030-01-01"), //! –º–∞–π–±—É—Ç–Ω—è –¥–∞—Ç–∞
        services, branches);
        console.log("–¶–µ–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω –≤–∏–∫–æ–Ω–∞—Ç–∏—Å—è ‚Äî –æ—á—ñ–∫—É–≤–∞–ª–∞—Å—å –ø–æ–º–∏–ª–∫–∞");
    }
    catch (err) {
        console.error("–û—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞:", err.message);
    }
}
